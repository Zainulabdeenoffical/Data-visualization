{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1HMdNevUrBV4JlfCt2I_ghV2UjoEzT0xt","authorship_tag":"ABX9TyNpnhI4MBDFegwzBcYvwtwC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/content/drive/MyDrive/CSV/economic_indicators_dataset_2010_2023.csv'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"],"metadata":{"id":"-360HpCb5ilu","executionInfo":{"status":"ok","timestamp":1726676355431,"user_tz":-300,"elapsed":572,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"FPypziF15rDt","executionInfo":{"status":"ok","timestamp":1726676375895,"user_tz":-300,"elapsed":406,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/CSV/economic_indicators_dataset_2010_2023.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dTTxtv9t5uqI","executionInfo":{"status":"ok","timestamp":1726676376916,"user_tz":-300,"elapsed":10,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}},"outputId":"e101670b-889e-4fb4-9012-a4e2c2630fe2"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date Country  Inflation Rate (%)  GDP Growth Rate (%)  \\\n","0  2010-01-31  Brazil                1.23                 0.69   \n","1  2010-01-31  France                6.76                 2.59   \n","2  2010-01-31     USA                7.46                 4.84   \n","3  2010-02-28  Brazil                5.43                 0.31   \n","4  2010-02-28  Canada                0.69                -0.52   \n","\n","   Unemployment Rate (%)  Interest Rate (%)  Stock Index Value  \n","0                  10.48               7.71           21748.85  \n","1                   4.27               7.39           10039.56  \n","2                   2.64               6.39           13129.10  \n","3                   8.26               6.09           23304.58  \n","4                  11.92              -0.51           16413.03  "],"text/html":["\n","  <div id=\"df-870b4aeb-7b98-48c4-a2d0-701164860a7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Country</th>\n","      <th>Inflation Rate (%)</th>\n","      <th>GDP Growth Rate (%)</th>\n","      <th>Unemployment Rate (%)</th>\n","      <th>Interest Rate (%)</th>\n","      <th>Stock Index Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-31</td>\n","      <td>Brazil</td>\n","      <td>1.23</td>\n","      <td>0.69</td>\n","      <td>10.48</td>\n","      <td>7.71</td>\n","      <td>21748.85</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-31</td>\n","      <td>France</td>\n","      <td>6.76</td>\n","      <td>2.59</td>\n","      <td>4.27</td>\n","      <td>7.39</td>\n","      <td>10039.56</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-31</td>\n","      <td>USA</td>\n","      <td>7.46</td>\n","      <td>4.84</td>\n","      <td>2.64</td>\n","      <td>6.39</td>\n","      <td>13129.10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-02-28</td>\n","      <td>Brazil</td>\n","      <td>5.43</td>\n","      <td>0.31</td>\n","      <td>8.26</td>\n","      <td>6.09</td>\n","      <td>23304.58</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-02-28</td>\n","      <td>Canada</td>\n","      <td>0.69</td>\n","      <td>-0.52</td>\n","      <td>11.92</td>\n","      <td>-0.51</td>\n","      <td>16413.03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-870b4aeb-7b98-48c4-a2d0-701164860a7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-870b4aeb-7b98-48c4-a2d0-701164860a7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-870b4aeb-7b98-48c4-a2d0-701164860a7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0de7a058-da55-40b0-8505-d5ef40e9f6ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0de7a058-da55-40b0-8505-d5ef40e9f6ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0de7a058-da55-40b0-8505-d5ef40e9f6ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 156,\n        \"samples\": [\n          \"2018-09-30\",\n          \"2015-12-31\",\n          \"2017-05-31\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"India\",\n          \"France\",\n          \"Germany\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.9563302856608953,\n        \"min\": 0.0,\n        \"max\": 9.99,\n        \"num_unique_values\": 392,\n        \"samples\": [\n          5.58,\n          0.68,\n          5.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP Growth Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.074761823645509,\n        \"min\": -5.0,\n        \"max\": 9.93,\n        \"num_unique_values\": 444,\n        \"samples\": [\n          -4.21,\n          4.13,\n          3.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.982405661317272,\n        \"min\": 2.0,\n        \"max\": 11.97,\n        \"num_unique_values\": 399,\n        \"samples\": [\n          5.76,\n          10.39,\n          3.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.1528772506260108,\n        \"min\": -0.98,\n        \"max\": 10.0,\n        \"num_unique_values\": 398,\n        \"samples\": [\n          1.49,\n          4.58,\n          -0.06\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Index Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11066.25923292693,\n        \"min\": 1017.27,\n        \"max\": 39982.21,\n        \"num_unique_values\": 500,\n        \"samples\": [\n          4027.99,\n          1078.72,\n          25508.93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"in0XK2cq54on","executionInfo":{"status":"ok","timestamp":1726675918312,"user_tz":-300,"elapsed":440,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}},"outputId":"ae10fbdc-9e49-4342-d7a5-eab8654f7767"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(500, 7)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"dK0KgZFI54qD","executionInfo":{"status":"ok","timestamp":1726675930159,"user_tz":-300,"elapsed":465,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}},"outputId":"752c915f-c98a-46e9-bdff-28ad256eb9f0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Inflation Rate (%)  GDP Growth Rate (%)  Unemployment Rate (%)  \\\n","count           500.00000           500.000000             500.000000   \n","mean              5.08514             2.414780               6.906720   \n","std               2.95633             4.074762               2.982406   \n","min               0.00000            -5.000000               2.000000   \n","25%               2.52500            -1.170000               4.257500   \n","50%               5.20500             2.580000               6.865000   \n","75%               7.71000             5.445000               9.502500   \n","max               9.99000             9.930000              11.970000   \n","\n","       Interest Rate (%)  Stock Index Value  \n","count         500.000000         500.000000  \n","mean            4.698180       20926.226540  \n","std             3.152877       11066.259233  \n","min            -0.980000        1017.270000  \n","25%             2.027500       11587.862500  \n","50%             4.975000       20996.210000  \n","75%             7.352500       30824.847500  \n","max            10.000000       39982.210000  "],"text/html":["\n","  <div id=\"df-cd6a5b82-8d19-4622-872e-eeeb0c00619a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation Rate (%)</th>\n","      <th>GDP Growth Rate (%)</th>\n","      <th>Unemployment Rate (%)</th>\n","      <th>Interest Rate (%)</th>\n","      <th>Stock Index Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>500.00000</td>\n","      <td>500.000000</td>\n","      <td>500.000000</td>\n","      <td>500.000000</td>\n","      <td>500.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.08514</td>\n","      <td>2.414780</td>\n","      <td>6.906720</td>\n","      <td>4.698180</td>\n","      <td>20926.226540</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.95633</td>\n","      <td>4.074762</td>\n","      <td>2.982406</td>\n","      <td>3.152877</td>\n","      <td>11066.259233</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.00000</td>\n","      <td>-5.000000</td>\n","      <td>2.000000</td>\n","      <td>-0.980000</td>\n","      <td>1017.270000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.52500</td>\n","      <td>-1.170000</td>\n","      <td>4.257500</td>\n","      <td>2.027500</td>\n","      <td>11587.862500</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.20500</td>\n","      <td>2.580000</td>\n","      <td>6.865000</td>\n","      <td>4.975000</td>\n","      <td>20996.210000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.71000</td>\n","      <td>5.445000</td>\n","      <td>9.502500</td>\n","      <td>7.352500</td>\n","      <td>30824.847500</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.99000</td>\n","      <td>9.930000</td>\n","      <td>11.970000</td>\n","      <td>10.000000</td>\n","      <td>39982.210000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd6a5b82-8d19-4622-872e-eeeb0c00619a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd6a5b82-8d19-4622-872e-eeeb0c00619a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd6a5b82-8d19-4622-872e-eeeb0c00619a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-405c26a6-d30f-457c-bdcd-84f44a7449c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-405c26a6-d30f-457c-bdcd-84f44a7449c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-405c26a6-d30f-457c-bdcd-84f44a7449c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Inflation Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175.11356893924764,\n        \"min\": 0.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.085139999999999,\n          5.205,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP Growth Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175.908925495778,\n        \"min\": -5.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.4147800000000004,\n          2.58,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 174.5613114045938,\n        \"min\": 2.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.906719999999999,\n          6.865,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest Rate (%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175.23076787890477,\n        \"min\": -0.98,\n        \"max\": 500.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.698180000000001,\n          4.975,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Index Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13850.167893544029,\n        \"min\": 500.0,\n        \"max\": 39982.21,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          20926.22654,\n          20996.21,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df['Country'].value_counts().plot(kind = 'bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":517},"id":"bK4bD-9J5-_4","executionInfo":{"status":"ok","timestamp":1726675943697,"user_tz":-300,"elapsed":921,"user":{"displayName":"Zain Ul Abdeen","userId":"08191961868450376773"}},"outputId":"ed223a30-3cf8-42e3-e85e-e3c48d23964f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Country'>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}